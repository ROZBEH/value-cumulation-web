datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "rhel-openssl-1.0.x"]
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.

model User {
  id                  String                 @id
  email               String                 @unique
  googleId            String?                @unique
  name                String?
  hashedPassword      String                 @default("")
  salt                String                 @default("")
  resetToken          String?
  verifyToken         String?
  resetTokenExpiresAt DateTime?
  favoriteMetrics     FavoriteMetricOnUser[]
  createdAt           DateTime               @default(now())
  subscription        Subscription?          @relation(fields: [subscriptionId], references: [id])
  subscriptionId      String?
}

enum Interval {
  MONTHLY
  YEARLY
  QUARTERLY
  WEEKLY
}

model Subscription {
  id               String   @id @default(cuid())
  subscriptionName String // a descriptive name for the subscription plan
  price            Float
  interval         Interval // a custom type defining the interval of the subscription, e.g. 'monthly', 'yearly', etc.
  users            User[] // a relation to the User model
  createdAt        DateTime @default(now())
}

model FavoriteMetric {
  id    String                 @id @default(cuid())
  name  String                 @unique
  users FavoriteMetricOnUser[]
}

model FavoriteMetricOnUser {
  id               String         @id @default(cuid())
  favoriteMetricId String
  favoriteMetric   FavoriteMetric @relation(fields: [favoriteMetricId], references: [id])
  userId           String
  user             User           @relation(fields: [userId], references: [id])

  @@unique([userId, favoriteMetricId])
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
}
